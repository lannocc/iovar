# Definitions in this file overwrite properties in build.xml

# System-dependent:
browser.executable=firefox

# Installation options:
app.install.servlet-api.jar=/usr/share/tomcat-servlet-api-3.1/lib/servlet-api.jar
app.install.ant.jar=/usr/share/ant/lib/ant.jar

# The value of the build.sysclasspath property control how the system classpath,
# ie. the classpath in effect when Ant is run, affects the behaviour of classpaths
# in Ant. The default behavior varies from Ant to Ant task.
# OPTIONS:
#  1. only   - Only the system classpath is used and classpaths specified in build
#              files, etc are ignored. This situation could be considered as the person
#              running the build file knows more about the environment than the person
#              writing the build file.
#  2. ignore - The system classpath is ignored. This situation is the reverse of the
#              above. The person running the build trusts the build file writer to
#              get the build file right.
#  3. last   - The classpath is concatenated to any specified classpaths at the end.
#              This is a compromise, where the build file writer has priority.
#  4. first  - Any specified classpaths are concatenated to the system classpath.
#              This is the other form of compromise where the build runner has priority.
# Niether "only" nor "ignore" will work.  "last" is the default here.  "first"
# would probably also work.
build.sysclasspath=ignore

# set this to classic for jdk1.1/1.2, modern for jdk1.3 and jikes if you have jikes.exe in the path
# Note - this is an Ant 'magic property' that is read by the javac task directly
build.compiler=modern

build.target.vm.version=1.5
ant.build.javac.source=1.5

# set these to your requirements to be passed to the javac command (in effect for non-production builds only)
javac.compiler=modern
javac.debug=on
javac.optimize=off
javac.deprecation=on
javac.verbose=off
javac.nowarn=off

# set these to your requirements to be passed to the javac command for production builds
javac.compiler.production=modern
javac.debug.production=on
javac.optimize.production=off
javac.deprecation.production=off
javac.verbose.production=off
javac.nowarn.production=on

